#ifndef EVENT_H
#define EVENT_H

enum Type{

    //MOUSE
    L_MOUSE_PRESSED,
    L_MOUSE_RELEASED,
    R_MOUSE_PRESSED,
    R_MOUSE_RELEASED,

    //KEYBOARD - PLAYER
    A_KEYBOARD_PRESSED,
    S_KEYBOARD_PRESSED,
    D_KEYBOARD_PRESSED,
    W_KEYBOARD_PRESSED,
    O_KEYBOARD_PRESSED,
    P_KEYBOARD_PRESSED,
    E_KEYBOARD_PRESSED,
    SPACE_KEYBOARD_PRESSED,
    ESCAPE_KEYBOARD_PRESSED,
    M_KEYBOARD_PRESSED,
    I_KEYBOARD_PRESSED,

    //TRIGGERS
    CREATE_ENEMIES,
    DELETE_ENEMIES,
    LOCK_DOORS,
    UNLOCK_DOORS,
    CREATE_CHEST_NORMAL_KEY,
    CREATE_CHEST_BOSS_KEY,
    CREATE_CHEST_LEVEL_KEY,
    CREATE_CHEST_JAIL_KEY,
    CREATE_CHEST_HAMMER,
    CREATE_CHEST_SLINGSHOT,
    CREATE_CHEST_FOOD_BERRY,
    CREATE_CHEST_FOOD_MEAT,
    CREATE_CHEST_FOOD_FISH,
    CREATE_CHEST_FOOD_ICE,
    CREATE_QUEEN,
    DOOR_1_2_PRESSED,
    DOOR_1_2_RELEASED,
    PLAYER_FALLS,
    CAMERA_ZOOM_IN,
    CAMERA_ZOOM_OUT,
    CHANGE_LEVEL,
    ADD_START,
    
    //BUTTONS
    GUI_ID_PLAY_BUTTON,
    GUI_ID_REPLAY_BUTTON,
    GUI_ID_MENU_BUTTON,
    GAME_CLOSE,

    //STATES
    GAME_OVER_CHANGE,
    MENU_CHANGE,
    DUNGEON_CHANGE,
    INVENTORY_CHANGE,

    //ANIMATIONS
    BOSS_DOOR_ANIMATION_START,
    BOSS_DOOR_ANIMATION_END,

    //ENTITIES
    BOSS_BATTLE_END,

   //AUDIO
    MENU_MUSIC,
    GAME_MUSIC,

    INVENTORY_OPEN,
    INVENTORY_CLOSE,
    EAT_FOOD,
    DROP_ITEM,

    SWORD_SWING,
    CHEST_OPEN,
    DOOR_OPEN,
    DOOR_CLOSE,
    DOOR_UNLOCK,
    DOOR_LOCKED,
    JAIL_OPEN,

    PUZZLE_CORRECT,

    PLAYER_ATTACK,
    PLAYER_RDAMAGE,

    SPENGUIN_ATTACK,
    SPENGUIN_RDAMAGE,
    SPENGUIN_DEATH,
    
    GPENGUIN_ATTACK,
    GPENGUIN_RDAMAGE,
    GPENGUIN_DEATH,

    KPONGO_ATTACK,
    KPONGO_RDAMAGE,
    KPONGO_DEATH,
    KPONGO_TALK,
    KPONGO_LAUGH,    
    START_CHANGE
};

class Event{

    public:

        Type getType(){
            return type;
        }

        Event(Type type){
            this->type = type;
        }

        virtual ~Event(){}

    private:

        Type type;
};



#endif // EVENT_H
